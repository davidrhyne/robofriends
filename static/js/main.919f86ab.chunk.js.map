{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","username","className","src","alt","CardList","robots","map","robot","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uPAeeA,G,MAZF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,KAAgBC,GAAW,EAArBC,SAAqB,EAAXD,OAClC,OACC,sBAAKE,UAAU,+DAAf,UACC,qBAAKC,IAAG,+BAA0BL,EAA1B,iBAA6CM,IAAI,WACxD,gCACC,6BAAKL,IACL,4BAAIC,YCcMK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEKA,EAAOC,KAAI,SAACC,GACd,OACC,cAAC,EAAD,CAECV,GAAIU,EAAMV,GACRC,KAAMS,EAAMT,KACZE,SAAUO,EAAMP,SAChBD,MAAOQ,EAAMR,OAJVQ,EAAMV,UCMHW,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKT,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCECI,EATA,SAACC,GAEf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YCiBKC,E,kDApBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,8DAOAC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAG1B,OAAIG,KAAKJ,MAAMC,SACP,0DAEDG,KAAKX,MAAMK,a,GAfOQ,aCoDZC,G,wDA9Cd,aAAc,IAAD,8BACZ,gBAgBDC,eAAiB,SAACC,GAEjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAjB1C,EAAKX,MAAQ,CAEZjB,OAAQ,GACRI,YAAa,IALF,E,gEASQ,IAAD,OACnByB,QAAQC,IAAI,kBAEZC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAACtB,OAAQmC,S,+BAQ9B,IAAD,EACuBd,KAAKJ,MAA5BjB,EADA,EACAA,OAAOI,EADP,EACOA,YAETgC,EAAiBpC,EAAOqC,QAAO,SAAAnC,GACpC,OAAOA,EAAMT,KAAK6C,cAAcC,SAASnC,EAAYkC,kBAItD,OAAQtC,EAAOwC,OAGd,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,WAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQoC,WAPrB,4D,GAhCeb,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.919f86ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Card.css\"\r\n\r\nconst Card = ({id, name, username, email}) => {\r\n\treturn(\r\n\t\t<div className=\"bg-light-green dib br3 pa3 ma2 bw2 shadow-5 grow tc cardSize\">\r\n\t\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<p>{email}</p>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn(\r\n\t\t<div>\r\n  \t\t \t{\r\n  \t\t \t\trobots.map((robot) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey={robot.id}  \r\n\t\t\t\t\t\t\tid={robot.id} \r\n\t\t\t  \t\t\t\tname={robot.name} \r\n\t\t\t  \t\t\t\tusername={robot.username} \r\n\t\t\t  \t\t\t\temail={robot.email}\r\n\t\t\t  \t\t\t/>\r\n  \t\t\t\t\t);\r\n \t\t \t\t})\r\n  \t\t \t}\r\n  \t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn(\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input \r\n\t\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\t\ttype=\"search\" \r\n\t\t\t\tplaceholder=\"search robots\" \r\n\t\t\t\tonChange={searchChange} //event calls function\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n\t//return props.children\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '800px' }}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({ hasError: true})\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Ooops.. That is not good</h1>\r\n\t\t} \r\n\t\treturn this.props.children\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\t//robots: robots,\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(\"App was loaded\");\r\n\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => this.setState({robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\t// console.log(event.target.value);\r\n\t\tthis.setState({ searchfield: event.target.value});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots,searchfield } = this.state;\r\n\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\t//console.log(filteredRobots);\r\n\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>loading the robots... </h1> :\r\n\t\t\t(\r\n\t\t\t<div className=\"tc\">\r\n\t\t\t\t<h1 className=\"roboFont\">robofriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // css for this component, \nimport App from \"./containers/App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}